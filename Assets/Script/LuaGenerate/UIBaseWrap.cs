//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIBase), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("OnInit", OnInit);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("Init", Init);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("GetGameObject", GetGameObject);
		L.RegFunction("GetRectTransform", GetRectTransform);
		L.RegFunction("GetImage", GetImage);
		L.RegFunction("GetText", GetText);
		L.RegFunction("GetButton", GetButton);
		L.RegFunction("GetInputField", GetInputField);
		L.RegFunction("GetScrollRect", GetScrollRect);
		L.RegFunction("GetRawImage", GetRawImage);
		L.RegFunction("GetReusingScrollRect", GetReusingScrollRect);
		L.RegFunction("GetJoyStick", GetJoyStick);
		L.RegFunction("RemoveAllListener", RemoveAllListener);
		L.RegFunction("AddOnClickListener", AddOnClickListener);
		L.RegFunction("AddEventListener", AddEventListener);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_objectList", get_m_objectList, set_m_objectList);
		L.RegVar("UIID", get_UIID, null);
		L.RegVar("UIEventKey", get_UIEventKey, null);
		L.RegVar("UIName", get_UIName, null);
		L.RegVar("m_RectTransform", get_m_RectTransform, set_m_RectTransform);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			obj.OnInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			obj.OnDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			obj.Destroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.GetGameObject(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRectTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.RectTransform o = obj.GetRectTransform(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetImage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.UI.Image o = obj.GetImage(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetText(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.UI.Text o = obj.GetText(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetButton(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.UI.Button o = obj.GetButton(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInputField(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.UI.InputField o = obj.GetInputField(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetScrollRect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.UI.ScrollRect o = obj.GetScrollRect(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRawImage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.UI.RawImage o = obj.GetRawImage(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetReusingScrollRect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			ReusingScrollRect o = obj.GetReusingScrollRect(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetJoyStick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			UGUIJoyStick o = obj.GetJoyStick(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			obj.RemoveAllListener();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddOnClickListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			string arg0 = ToLua.CheckString(L, 2);
			InputEventHandle<InputUIOnClickEvent> arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (InputEventHandle<InputUIOnClickEvent>)ToLua.CheckObject(L, 3, typeof(InputEventHandle<InputUIOnClickEvent>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(InputEventHandle<InputUIOnClickEvent>), func) as InputEventHandle<InputUIOnClickEvent>;
			}

			string arg2 = ToLua.CheckString(L, 4);
			obj.AddOnClickListener(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddEventListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIBase obj = (UIBase)ToLua.CheckObject(L, 1, typeof(UIBase));
			System.Enum arg0 = (System.Enum)ToLua.CheckObject(L, 2, typeof(System.Enum));
			EventHandle arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (EventHandle)ToLua.CheckObject(L, 3, typeof(EventHandle));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(EventHandle), func) as EventHandle;
			}

			obj.AddEventListener(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_objectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			System.Collections.Generic.List<UnityEngine.GameObject> ret = obj.m_objectList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_objectList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			int ret = obj.UIID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UIID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIEventKey(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			string ret = obj.UIEventKey;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UIEventKey on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			string ret = obj.UIName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UIName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_RectTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			UnityEngine.RectTransform ret = obj.m_RectTransform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_RectTransform on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_objectList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			System.Collections.Generic.List<UnityEngine.GameObject> arg0 = (System.Collections.Generic.List<UnityEngine.GameObject>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.GameObject>));
			obj.m_objectList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_objectList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_RectTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIBase obj = (UIBase)o;
			UnityEngine.RectTransform arg0 = (UnityEngine.RectTransform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.RectTransform));
			obj.m_RectTransform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_RectTransform on a nil value" : e.Message);
		}
	}
}

